kind: CertificateSigningRequest
apiVersion: certificates.k8s.io/v1beta1
metadata:
   name: prod-user
spec:
  groups:
    - system:authenticated
  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ2FqQ0NBVklDQVFBd0pURVNNQkFHQTFVRUF3d0pjSEp2WkMxMWMyVnlNUTh3RFFZRFZRUUtEQVprWlhadgpjSE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREJJbm13cENFbVpWMklzTGxUCnBrc01wMitMMWdPL0EzWENISGt6M1d5NnI0Vm1mKy8yNExsTElRRUZ5QkF4SklESHVPemdOZTR5TTVDVDN6ZGsKTVVWeHFIeXgyTGYwajNEOXR4cFlwVGNPbjMzUGN4M2xRV3c5dmFTbGpUZXhrcC9sSTZqdWMzM21yRkF6U1VhRgpzTlBpRzR6V2p4UmFuU2trTFR4eE1Qb0ltd2NFbWd4R2pEcFliZmo2SW1UU29vTllNMVMwd2lVVzBxVmdTYXdkClhCVEd4N050OC9lNlRlZWlyTXpmak5wNlh4czJUbnRmckVYcDJPK080TFdYRXZDcjhYVFNqK2FkOGc0NWlVODEKc0NFNlZwWW5UVTBmeVl1aDFZNHpBRVRDUjN2enJxZVp5cGhFU0xZbjdLWm9wT0xCRGxLMmV2bnVJS1kvTFNmagorYWFKQWdNQkFBR2dBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBb2NaeXZWdGpZY1J6a3gwTDZoM0Fha1J1CmgzSkJtT1RZMll4RzdJUUh3VlBud29RWS9zUm1lRmM3ai9tOTNkZ1ZWSUZCakZENVJRbU9qMTRyR3pZbmhZM3kKRkxpbFg2QzNlMTF0eVRMNGJSZHFNb3NqNnc5elpVbi8rMUEyeCs2TVZQcFZVclE2eVFsNXoyZ3RhbUFtZW9BZwpnRnQ5cHZzenRwY2tjZ0RpbTcrUmI0cWFpMXVRZEY2WW1XMDRRYm5lYkgvMkhwT0VEUUdVc1RoZXJyRjljbFBLCjJ4NHlnamdjY1Z5WUFXbE52bUVUUk5CcXRoT001ODRtTHNFZE9HdGJueWlXSTZ5TXZrMDk0VWxRYUhpY0g5dG4KcWNnMk9mWTU5eGl6dStWUGZRYmJLcU1UUmg2a0J1ZittOXdtcHpsSkE4dmZUcER2M3lOV2hZUzQzOW5lckE9PQotLS0tLUVORCBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0K
  usages:
  - digital signature
  - key encipherment
  - server auth
  - client auth

# openssl genrsa -out prod-user.key 2048
# openssl req -config csr.conf -new -key prod-user.key -nodes -out prod-user.csr
# cat prod-user.csr | base64 | tr -d '\n'
# kubectl apply -f csr.yml
# kubectl get csr ; kubectl certificate approve prod-user
# kubectl get csr prod-user -o jsonpath="{.status.certificate}" | base64 --decode > prod-user.crt
# modify kubeconfig with 
